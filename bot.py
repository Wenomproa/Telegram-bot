import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, CallbackQueryHandler
import config

# –¢–∞–Ω–∑–∏–º–∏ –ª–æ–≥“≥–æ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –ö–æ–º–∞–Ω–¥–∞–∏ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    chat_id = update.effective_chat.id

    # –°–∞–Ω“∑–∏—à–∏ –æ–±—É–Ω–∞ –±–∞ –∫–∞–Ω–∞–ª
    member = await context.bot.get_chat_member(config.REQUIRED_CHANNEL, user.id)
    if member.status not in ["member", "administrator", "creator"]:
        keyboard = [[InlineKeyboardButton("‚úÖ –ú–∞–Ω –∞—ä–∑–æ —à—É–¥–∞–º", callback_data='check_sub')]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await update.message.reply_text(
            "üîí –ë–∞—Ä–æ–∏ –∏—Å—Ç–∏—Ñ–æ–¥–∞–∏ –±–æ—Ç, –∞–≤–≤–∞–ª –±–∞ –∫–∞–Ω–∞–ª–∏ –º–æ –∞—ä–∑–æ —à–∞–≤–µ–¥:\n"
            f"{config.REQUIRED_CHANNEL_LINK}",
            reply_markup=reply_markup
        )
        return

    # –ê–≥–∞—Ä –æ–±—É–Ω–∞ –±–æ—à–∞–¥
    await update.message.reply_text(
        "ü§ñ –•—É—à –æ–º–∞–¥–µ–¥ –±–∞ –±–æ—Ç–∏ AI!\n\n"
        "- üé® –†–∞—Å–º —Å–æ–∑–µ–¥\n"
        "- üí¨ –ß–∞—Ç GPT\n"
        "- üåç –¢–∞—Ä“∑—É–º–∞ –∫—É–Ω–µ–¥\n"
        "- üí≥ –•–∞—Ä–∏–¥–∏ VIP\n\n"
        "–ú–µ–Ω—é—Ä–æ –∏–Ω—Ç–∏—Ö–æ–± –∫—É–Ω–µ–¥."
    )

# –¢—É–≥–º–∞–∏ '–ú–∞–Ω –∞—ä–∑–æ —à—É–¥–∞–º'
async def check_sub(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user = query.from_user

    member = await context.bot.get_chat_member(config.REQUIRED_CHANNEL, user.id)
    if member.status not in ["member", "administrator", "creator"]:
        await query.answer("‚õî –®—É–º–æ “≥–∞–Ω”Ø–∑ –æ–±—É–Ω–∞ –Ω–∞—à—É–¥–∞–µ–¥.")
    else:
        await query.answer("‚úÖ –¢–∞—à–∞–∫–∫—É—Ä! –®—É–º–æ “≥–æ–ª–æ –º–µ—Ç–∞–≤–æ–Ω–µ–¥ –±–æ—Ç—Ä–æ –∏—Å—Ç–∏—Ñ–æ–¥–∞ –±–∞—Ä–µ–¥.")
        await query.edit_message_text("üéâ –î–∞—Å—Ç—Ä–∞—Å”£ –∏“∑–æ–∑–∞—Ç –¥–æ–¥–∞ —à—É–¥!")

# –û“ì–æ–∑–∏ –±–æ—Ç
def main():
    app = ApplicationBuilder().token(config.BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(check_sub, pattern='check_sub'))

    app.run_polling()

if __name__ == '__main__':
    main()